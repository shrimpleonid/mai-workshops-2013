#!/usr/bin/env bash

##
##  Удаляет все файлы с указанным суффиксом, к которым
##  не было обращений указанное число дней.
##
##  Как использовать:
##      ./del-mtime-simple.sh <? | -h | --help> \| <папка дни [суффикс]>
##
##  Если в качестве первого аргумента указан символ ? или -h  или --help ,
##  то выводится описание программы. Если не указан суффикс файла,
##  то он считается пустой строкой, и операции производятся со всеми файлами
##  из указанной папки. Перед каждым удалением у пользователя
##  запрашивается подтверждение.
##  Реализация без использования `find`.
##


##
## Регулярное выражение, для проверки, является ли количество дней числом.
## http://ru.wikibooks.org/wiki/Регулярные_выражения
##
NUMBER_REGEXP='^[0-9]+$';


##
## Аргументы командной строки.
## У директории откусываем завершающий `/`.
##
XDIR="${1%\/}";
DAYS="$2";
SUFF="$3";

##
## Строка с описанием программы.
## Используется управление цветом.
## Про то как управлять цветом, смотрите тут:
## http://www.opennet.ru/base/dev/console_ctl.txt.html
##
HELP="
\t\033[1m$PROG\033[0m <\033[4m?\033[0m | \033[4m-h\033[0m | \033[4m--help\033[0m> \| <\033[4mпапка\033[0m \033[4mдни\033[0m \033[4m[суффикс]\033[0m>
\t\tиз указанной \033[4mдиректории\033[0m удаляет все файлы
\t\tс указанным \033[4mсуффиксом\033[0m, к которым не было обращений
\t\tуказанное число \033[4mдней\033[0m.
\t\tЕсли в качестве первого аргумента указан символ \033[7m ? \033[0m
\t\tили \033[7m -h \033[0m или \033[7m --help \033[0m, то выводится описание программы.
\t\tЕсли не указан суффикс файла, то он считается пустой строкой,
\t\tи операции производятся со всеми файлами.
\t\tПеред каждым удалением у пользователя запрашивается подтверждение.
"

##
## Регулярное выражение, для проверки удовлетворяет файл суффиксу или нет.
## http://ru.wikibooks.org/wiki/Регулярные_выражения
##
SUFFIX_REGEXP=".*${SUFF}";


##
## Проверка на то что пользователь запросил справку
##
if [ "x${XDIR}" == "x?" ]                   \
    || [ "x${XDIR}" == "x-h" ]              \
    || [ "x${XDIR}" == "x--help" ] ; then
    help;
    exit 0;
fi;

##
## Проверка на наличие директории.
##
if [ ! -d "${XDIR}" ] ; then
    echo -en "\033[1mОШИБКА:\033[0m Нет такой директории: \`${XDIR}'\n" >&2;
    ## Вывод на стандартный потоки ошибок
    exit 1;
fi;

##
## Проверка что были введены дни.
##
if [ -z "${DAYS}" ] ; then
    echo -en "\033[1mОШИБКА:\033[0m Не указано количество дней!\n" >&2 ;
    ## Вывод на стандартный потоки ошибок
    exit 1;
fi;

##
## Проверка является ${DAYS} числом,
## если нет то, ругаемся и останавливаем программу.
## Проверка на число осуществляется через регулярные выражения.
##
if ! [[ ${DAYS} =~ ${NUMBER_REGEXP} ]] ; then
   echo -en "\033[1mОШИБКА:\033[0m  \`${DAYS}' не похоже на количество дней\n" >&2;
   ## Вывод на стандартный потоки ошибок
   exit 1;
fi;

CURDATE=$(date +"%Y%j");

for FILE in "${XDIR}"/*; do
    FILEDATE=$(ls -l ${FILE} --time-style=+"%Y%j" | awk '{print $6}');
    DIFF=$(($CURDATE-$FILEDATE));
    if [ ${DIFF} -ge ${DAYS} ] &&  [[ "${FILE}" =~ ${SUFFIX_REGEXP} ]] ;  then
        read -p "Вы уверены, что хотите удалить файл \`${FILE}'? [д\Н]: " ANS ;
        if [ "x${ANS}" == "xд" ] ; then
            ##
            ## Удаляем файл, если получили на то подтверждение.
            ##
            rm -f "${FILE}" ;
        fi ;
    fi;
done;



